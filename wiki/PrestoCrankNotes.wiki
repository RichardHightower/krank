#summary Getting Presto to work with Crank libs

= Introduction =

Just some notes. Probably not worth reading for anyone not also working with Presto.


= Details =

In trying to get Presto to work with Crank libraries. I am attempting to update the Presto sample application which is extremely well done I might add and is a testament to Scott Fauerbach's attention to detail. 

I update the web app to use latest version of, Spring, Hibernate, JSF and Facelets. This caused all manner of class loading issues, which I got around with a bit of trouble shooting technique and goat's blood not to mention a few sharp jabs to my eye ball with a hot, sharp fork.

= SpringApplication =
Both Presto and Crank use a class called SpringApplication which is a Spring enabled, JSF application class implementation. This class is used to load converters and such that allow DI via Spring. The problem with this class is that in JSF 1.2, it uses the EL mechanism to load the converters and it by passes converters loaded with the Application object and somehow gets them right from faces-config, which of course is a bug that has not been fixed as of release 1.2.04.

The latest versions of faces jar files can be found on Sun's maven repo which can be found here for those playing the home version of family feud:

==== maven repo where latest jsf jar files can be found ===
{{{
		<repository>
			<id>java.net</id>
			<url>https://maven-repository.dev.java.net/repository</url>
			<layout>legacy</layout>
		</repository>
}}}